WebGLContext
========================
A WebGL context is a handle throught which we can access all WebGL functions and attributes.
API for WebGL. Holds OpenGL state machine. Implemented as a Javascript Object.

state machine allows you to bind objects to some bind point in context with some API call.
It also allows you to decribe attributes relevent to geometry manipulation or objects in scene.

These bind points are some properties in the context.


WebGLBuffer (VBO)
========================
Buffer holding vertex and index data. Together with uniforms these are input data to the rendering pipeline.


WebGLFrameBuffer (FBO)
========================
Alternative render target. There is a default frame buffer in OpenGL ES2 commonly known as window system provided frame buffer. 
But in WebGL it's just regular FBO which displays its content on the canvas.


WebGLRenderBuffer
========================
Something you can attach to an FBO to render into. Currently only way to do depth testing.

WebGLTexture
========================
A texture is an image which you can use to both read from a Fragment Shader, as well as target for an FBO to render into.
WebGL supports 2D and Cube textures.

WebGLProgram
========================
Both a vertex and Fragment shader linked together. 

WebGLShader
========================
An object you create, set the source for, compile and attach to a program.
2 types: 1. Vertex Shader 2. Fragment Shader

1. Vertex Shader
------------------------


2. Fragment Shader
------------------------


WebGLUniformLocation
========================
Identifier you can query from the program. You use that to set constants in the program.


